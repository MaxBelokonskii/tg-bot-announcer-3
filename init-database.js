#!/usr/bin/env node

/**
 * [RU] –°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * [EN] Database initialization script
 */

const { getDatabaseConnection } = require('./database/connection');
const fs = require('fs');

async function initializeDatabase() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –µ—Å–ª–∏ –µ—Å—Ç—å
    const dbPath = process.env.DATABASE_PATH || './database/bot_database.db';
    if (fs.existsSync(dbPath)) {
      fs.unlinkSync(dbPath);
      console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const dbConnection = getDatabaseConnection(dbPath);
    const db = dbConnection.connect();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    const tables = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='table' 
      ORDER BY name
    `).all();
    
    console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    tables.forEach(table => {
      console.log(`  - ${table.name}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
    const userTableInfo = db.prepare(`PRAGMA table_info(users)`).all();
    console.log('\nüë• –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
    userTableInfo.forEach(column => {
      console.log(`  - ${column.name}: ${column.type} ${column.notnull ? 'NOT NULL' : ''} ${column.dflt_value ? `DEFAULT ${column.dflt_value}` : ''}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ attendance_status —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const hasAttendanceStatus = userTableInfo.some(col => col.name === 'attendance_status');
    if (hasAttendanceStatus) {
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ attendance_status –Ω–∞–π–¥–µ–Ω–∞');
    } else {
      console.error('‚ùå –ö–æ–ª–æ–Ω–∫–∞ attendance_status –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
      process.exit(1);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ username —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const hasUsername = userTableInfo.some(col => col.name === 'username');
    if (hasUsername) {
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ username –Ω–∞–π–¥–µ–Ω–∞');
    } else {
      console.error('‚ùå –ö–æ–ª–æ–Ω–∫–∞ username –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
      process.exit(1);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤:');
    const indexes = db.prepare(`PRAGMA index_list(users)`).all();
    
    const requiredIndexes = ['idx_users_telegram_id', 'idx_users_username', 'idx_users_attendance'];
    const existingIndexes = indexes.map(idx => idx.name);
    
    requiredIndexes.forEach(indexName => {
      if (existingIndexes.includes(indexName)) {
        console.log(`‚úÖ –ò–Ω–¥–µ–∫—Å ${indexName} –Ω–∞–π–¥–µ–Ω`);
      } else {
        console.warn(`‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å ${indexName} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      }
    });
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    try {
      // –¢–µ—Å—Ç 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username
      const insertUser = db.prepare(`
        INSERT INTO users (telegram_id, full_name, username, attendance_status) 
        VALUES (?, ?, ?, ?)
      `);
      
      insertUser.run('test_123', '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'test_user', 'attending');
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username —Å–æ–∑–¥–∞–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è
      const user = db.prepare(`
        SELECT telegram_id, full_name, username, attendance_status 
        FROM users 
        WHERE telegram_id = ?
      `).get('test_123');
      
      if (user && user.username === 'test_user') {
        console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${user.full_name} (@${user.username}) (${user.attendance_status})`);
        
        // –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è username
        const updateResult = db.prepare(`
          UPDATE users 
          SET username = ? 
          WHERE telegram_id = ?
        `).run('updated_user', 'test_123');
        
        if (updateResult.changes > 0) {
          console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ username —Ä–∞–±–æ—Ç–∞–µ—Ç');
        } else {
          console.warn('‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ username –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ');
        }
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ username –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
        process.exit(1);
      }
      
      // –¢–µ—Å—Ç 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
      insertUser.run('test_456', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ Username', null, 'attending');
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username —Å–æ–∑–¥–∞–Ω (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)');
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      db.prepare('DELETE FROM users WHERE telegram_id IN (?, ?)').run('test_123', 'test_456');
      console.log('üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å username:', error.message);
      process.exit(1);
    }
    
    dbConnection.close();
    console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    console.log(`üìç –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${dbPath}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  initializeDatabase();
}

module.exports = { initializeDatabase };