#!/usr/bin/env node

/**
 * [RU] –°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * [EN] Database initialization script
 */

const { getDatabaseConnection } = require('./database/connection');
const fs = require('fs');

async function initializeDatabase() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –µ—Å–ª–∏ –µ—Å—Ç—å
    const dbPath = process.env.DATABASE_PATH || './bot_database.db';
    if (fs.existsSync(dbPath)) {
      fs.unlinkSync(dbPath);
      console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö');
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const dbConnection = getDatabaseConnection(dbPath);
    const db = dbConnection.connect();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    const tables = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='table' 
      ORDER BY name
    `).all();
    
    console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    tables.forEach(table => {
      console.log(`  - ${table.name}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
    const userTableInfo = db.prepare(`PRAGMA table_info(users)`).all();
    console.log('\nüë• –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
    userTableInfo.forEach(column => {
      console.log(`  - ${column.name}: ${column.type} ${column.notnull ? 'NOT NULL' : ''} ${column.dflt_value ? `DEFAULT ${column.dflt_value}` : ''}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ attendance_status —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const hasAttendanceStatus = userTableInfo.some(col => col.name === 'attendance_status');
    if (hasAttendanceStatus) {
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ attendance_status –Ω–∞–π–¥–µ–Ω–∞');
    } else {
      console.error('‚ùå –ö–æ–ª–æ–Ω–∫–∞ attendance_status –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
      process.exit(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    try {
      const insertUser = db.prepare(`
        INSERT INTO users (telegram_id, full_name, attendance_status) 
        VALUES (?, ?, ?)
      `);
      
      insertUser.run('test_123', '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'attending');
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è
      const user = db.prepare(`
        SELECT telegram_id, full_name, attendance_status 
        FROM users 
        WHERE telegram_id = ?
      `).get('test_123');
      
      if (user) {
        console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${user.full_name} (${user.attendance_status})`);
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.prepare('DELETE FROM users WHERE telegram_id = ?').run('test_123');
        console.log('üßπ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å attendance_status:', error.message);
      process.exit(1);
    }
    
    dbConnection.close();
    console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    console.log(`üìç –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${dbPath}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  initializeDatabase();
}

module.exports = { initializeDatabase };