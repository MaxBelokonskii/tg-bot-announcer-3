/**
 * [RU] –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 * [EN] Simple test for basic functionality
 */

const { DatabaseConnection } = require('../../database/connection');
const { AttendanceLogic } = require('../../features/attendance/logic');
const { AdminLogic } = require('../../features/admin/logic');
const { MainMenu } = require('../../interface/main-menu');

async function simpleTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...\n');

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const dbConnection = new DatabaseConnection('test-simple.db');
    const database = dbConnection.connect();

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const insertUser = database.prepare(`
      INSERT INTO users (telegram_id, full_name, attendance_status, created_at)
      VALUES (?, ?, ?, datetime('now'))
    `);

    insertUser.run('123456789', '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'attending');
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º AttendanceLogic
    const attendanceLogic = new AttendanceLogic(database);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    const status = await attendanceLogic.api.getUserAttendance('123456789');
    console.log(`‚úÖ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${status}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    const updateResult = await attendanceLogic.api.updateUserAttendance('123456789', 'maybe');
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞: ${updateResult.success}`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º AdminLogic
    process.env.ADMIN_ID = '123456789'; // –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–æ–º
    const adminLogic = new AdminLogic(database);
    
    const isAdmin = adminLogic.isAdmin('123456789');
    console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞: ${isAdmin}`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º MainMenu
    const mainMenu = new MainMenu(database);
    
    const userMenuItems = mainMenu.generateMenuItems('999999999'); // –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const adminMenuItems = mainMenu.generateMenuItems('123456789'); // –ê–¥–º–∏–Ω
    
    console.log(`‚úÖ –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userMenuItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
    console.log(`‚úÖ –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞: ${adminMenuItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
    
    const hasAdminButton = adminMenuItems.some(item => item.callback === 'admin_guest_list');
    console.log(`‚úÖ –£ –∞–¥–º–∏–Ω–∞ –µ—Å—Ç—å –∞–¥–º–∏–Ω—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞: ${hasAdminButton}`);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    dbConnection.close();

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    return true;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    console.error(error.stack);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  simpleTest()
    .then(success => {
      process.exit(success ? 0 : 1);
    })
    .catch(error => {
      console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { simpleTest };