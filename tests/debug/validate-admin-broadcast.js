/**
 * [RU] –°–∫—Ä–∏–ø—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
 * [EN] Admin message broadcasting feature validation script
 */

const Database = require('better-sqlite3');
const path = require('path');
const fs = require('fs');
const { AdminAPI } = require('../../features/admin/api');
const { AdminLogic } = require('../../features/admin/logic');
const { MainMenu } = require('../../interface/main-menu');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
const filesToCheck = [
  '../../features/admin/api.js',
  '../../features/admin/logic.js', 
  '../../interface/main-menu.js',
  '../../bot/router.js',
  '../../bot/texts.js',
  '../../database/schema.sql'
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤:');
for (const file of filesToCheck) {
  const fullPath = path.join(__dirname, file);
  if (fs.existsSync(fullPath)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
  }
}
console.log('');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
console.log('üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
const dbPath = path.join(__dirname, '../../database/bot_database.db');
if (!fs.existsSync(dbPath)) {
  console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  process.exit(1);
}

const db = new Database(dbPath);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã admin_messages
const adminMessagesTable = db.prepare(`
  SELECT name FROM sqlite_master 
  WHERE type='table' AND name='admin_messages'
`).get();

if (adminMessagesTable) {
  console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ admin_messages —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
  const tableInfo = db.prepare('PRAGMA table_info(admin_messages)').all();
  const expectedColumns = [
    'id', 'message_text', 'message_type', 'sent_by', 'sent_at',
    'total_recipients', 'delivered_count', 'failed_count', 'blocked_count'
  ];
  
  const actualColumns = tableInfo.map(col => col.name);
  const missingColumns = expectedColumns.filter(col => !actualColumns.includes(col));
  
  if (missingColumns.length === 0) {
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã admin_messages –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
  } else {
    console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ admin_messages: ${missingColumns.join(', ')}`);
  }
} else {
  console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ admin_messages –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}
console.log('');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∏ Logic –∫–ª–∞—Å—Å—ã
console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏ Logic –∫–ª–∞—Å—Å–æ–≤:');
try {
  const adminAPI = new AdminAPI(db);
  console.log('‚úÖ AdminAPI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  if (typeof adminAPI.sendTestMessage === 'function') {
    console.log('‚úÖ –ú–µ—Ç–æ–¥ sendTestMessage —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥ sendTestMessage –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  if (typeof adminAPI.getTestMessageHistory === 'function') {
    console.log('‚úÖ –ú–µ—Ç–æ–¥ getTestMessageHistory —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥ getTestMessageHistory –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  const adminLogic = new AdminLogic(db);
  console.log('‚úÖ AdminLogic –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
  if (typeof adminLogic.handleAdminMessage === 'function') {
    console.log('‚úÖ –ú–µ—Ç–æ–¥ handleAdminMessage —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥ handleAdminMessage –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  if (typeof adminLogic.showMessageSendingPanel === 'function') {
    console.log('‚úÖ –ú–µ—Ç–æ–¥ showMessageSendingPanel —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥ showMessageSendingPanel –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
  if (typeof adminLogic.confirmMessageSending === 'function') {
    console.log('‚úÖ –ú–µ—Ç–æ–¥ confirmMessageSending —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ùå –ú–µ—Ç–æ–¥ confirmMessageSending –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }
  
} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤: ${error.message}`);
}
console.log('');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º MainMenu
console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ MainMenu:');
try {
  const mainMenu = new MainMenu(db);
  console.log('‚úÖ MainMenu –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  process.env.ADMIN_ID = '123456789';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const adminMenuItems = mainMenu.generateMenuItems('123456789');
  const hasAdminMessageButton = adminMenuItems.some(item => 
    item.callback_data === 'admin_send_test_message'
  );
  
  if (hasAdminMessageButton) {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  } else {
    console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–µ–Ω—é –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userMenuItems = mainMenu.generateMenuItems('999999999');
  const userHasAdminButton = userMenuItems.some(item => 
    item.callback_data === 'admin_send_test_message'
  );
  
  if (!userHasAdminButton) {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–∫—Ä—ã—Ç–∞ –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  } else {
    console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω–∞ –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º');
  }
  
} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ MainMenu: ${error.message}`);
}
console.log('');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:');
try {
  const texts = require('../../bot/texts');
  
  if (texts.admin && texts.admin.message) {
    console.log('‚úÖ –¢–µ–∫—Å—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
    const requiredTexts = [
      'title', 'testMessage', 'confirmPanel', 'sending', 
      'completed', 'cancelled', 'error'
    ];
    
    const missingTexts = requiredTexts.filter(key => !texts.admin.message[key]);
    
    if (missingTexts.length === 0) {
      console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–µ–∫—Å—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    } else {
      console.log(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—Å—Ç—ã: ${missingTexts.join(', ')}`);
    }
    
    if (texts.admin.message.buttons) {
      console.log('‚úÖ –¢–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    } else {
      console.log('‚ùå –¢–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    }
  } else {
    console.log('‚ùå –¢–µ–∫—Å—Ç—ã –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  }
} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤: ${error.message}`);
}
console.log('');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API
console.log('üß™ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
(async () => {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const insertUser = db.prepare(`
      INSERT OR REPLACE INTO users (telegram_id, full_name, attendance_status) 
      VALUES (?, ?, ?)
    `);
    insertUser.run('test_user_123', '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'attending');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º getTestMessageHistory —Å –ø—É—Å—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π
    const adminAPI = new AdminAPI(db);
    const historyResult = await adminAPI.getTestMessageHistory(5);
    
    if (historyResult.success) {
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç (–Ω–∞–π–¥–µ–Ω–æ ${historyResult.count} –∑–∞–ø–∏—Å–µ–π)`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: ${historyResult.error}`);
    }
    
    // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const deleteUser = db.prepare('DELETE FROM users WHERE telegram_id = ?');
    deleteUser.run('test_user_123');
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
  }
  console.log('');
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
  db.close();
  
  console.log('üéâ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n');
  console.log('üìã –ö—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:');
  console.log('   ‚Ä¢ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ admin_messages –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫');
  console.log('   ‚Ä¢ AdminAPI.sendTestMessage() - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º');
  console.log('   ‚Ä¢ AdminAPI.getTestMessageHistory() - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–ø—Ä–∞–≤–æ–∫');
  console.log('   ‚Ä¢ AdminLogic.handleAdminMessage() - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  console.log('   ‚Ä¢ AdminLogic.showMessageSendingPanel() - –ø–æ–∫–∞–∑ –ø–∞–Ω–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
  console.log('   ‚Ä¢ AdminLogic.confirmMessageSending() - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏');
  console.log('   ‚Ä¢ AdminLogic.cancelMessageSending() - –æ—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
  console.log('   ‚Ä¢ –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
  console.log('   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_message');
  console.log('   ‚Ä¢ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π');
  console.log('   ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏');
  console.log('   ‚Ä¢ –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
  console.log('');
  console.log('üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
})();