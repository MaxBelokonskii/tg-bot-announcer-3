/**
 * [RU] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
 * [EN] Configuration for enhanced admin broadcasts
 */

/**
 * [RU] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
 * [EN] Enhanced admin broadcast configuration
 */
const enhancedAdminConfig = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  enabled: process.env.ENHANCED_BROADCAST_ENABLED === 'true' || false,
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
  delays: {
    betweenMessages: parseInt(process.env.DEFAULT_SEQUENCE_DELAY) || 2000,
    betweenUsers: parseInt(process.env.USER_PROCESSING_DELAY) || 100,
    networkTimeout: parseInt(process.env.ENHANCED_DELIVERY_TIMEOUT) || 30000
  },
  
  // –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
  batching: {
    maxUsersPerBatch: parseInt(process.env.MAX_ENHANCED_USERS_PER_BATCH) || 10,
    batchProcessingDelay: parseInt(process.env.BATCH_PROCESSING_DELAY) || 1000
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  sequence: {
    includeUsefulInfo: process.env.ENHANCED_INCLUDE_USEFUL_INFO !== 'false',
    includeEventDetails: process.env.ENHANCED_INCLUDE_EVENT_DETAILS !== 'false',
    triggerMenu: process.env.ENHANCED_TRIGGER_MENU !== 'false'
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
  retry: {
    maxAttempts: parseInt(process.env.MAX_RETRY_ATTEMPTS) || 3,
    retryDelay: parseInt(process.env.RETRY_DELAY) || 1000,
    exponentialBackoff: process.env.USE_EXPONENTIAL_BACKOFF === 'true' || false
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  logging: {
    enableDetailedLogs: process.env.ENHANCED_DETAILED_LOGS === 'true' || true,
    logSequenceSteps: process.env.LOG_SEQUENCE_STEPS !== 'false',
    logUserEligibility: process.env.LOG_USER_ELIGIBILITY === 'true' || false
  },
  
  // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  eligibility: {
    requireFullName: process.env.REQUIRE_FULL_NAME !== 'false',
    requireAttendanceStatus: process.env.REQUIRE_ATTENDANCE_STATUS !== 'false',
    minimumDataCompleteness: parseInt(process.env.MIN_DATA_COMPLETENESS) || 50, // –ø—Ä–æ—Ü–µ–Ω—Ç
    minimumEligibilityScore: parseInt(process.env.MIN_ELIGIBILITY_SCORE) || 40 // –∏–∑ 100
  },
  
  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  performance: {
    maxConcurrentSequences: parseInt(process.env.MAX_CONCURRENT_SEQUENCES) || 5,
    sequenceTimeoutMs: parseInt(process.env.SEQUENCE_TIMEOUT_MS) || 60000,
    enableMemoryOptimization: process.env.ENABLE_MEMORY_OPTIMIZATION === 'true' || true
  },
  
  // Fallback –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  fallback: {
    useStandardBroadcastOnError: process.env.FALLBACK_TO_STANDARD === 'true' || true,
    skipFailedUsers: process.env.SKIP_FAILED_USERS === 'true' || true,
    continueOnPartialFailure: process.env.CONTINUE_ON_PARTIAL_FAILURE !== 'false'
  }
};

/**
 * [RU] –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * [EN] Validates configuration
 */
function validateConfig(config = enhancedAdminConfig) {
  const errors = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
  if (config.delays.betweenMessages < 100) {
    errors.push('–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞ (–º–∏–Ω–∏–º—É–º 100ms)');
  }
  
  if (config.delays.betweenMessages > 10000) {
    errors.push('–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–∞ (–º–∞–∫—Å–∏–º—É–º 10s)');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  if (config.batching.maxUsersPerBatch < 1) {
    errors.push('–†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0');
  }
  
  if (config.batching.maxUsersPerBatch > 100) {
    errors.push('–†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ (–º–∞–∫—Å–∏–º—É–º 100)');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
  if (config.retry.maxAttempts < 1 || config.retry.maxAttempts > 10) {
    errors.push('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (config.eligibility.minimumDataCompleteness < 0 || config.eligibility.minimumDataCompleteness > 100) {
    errors.push('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100%');
  }
  
  if (config.eligibility.minimumEligibilityScore < 0 || config.eligibility.minimumEligibilityScore > 100) {
    errors.push('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  if (config.performance.maxConcurrentSequences < 1) {
    errors.push('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0');
  }
  
  if (config.performance.sequenceTimeoutMs < 10000) {
    errors.push('–¢–∞–π–º-–∞—É—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª (–º–∏–Ω–∏–º—É–º 10s)');
  }
  
  return {
    valid: errors.length === 0,
    errors
  };
}

/**
 * [RU] –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π
 * [EN] Gets configuration with overrides applied
 */
function getConfig(overrides = {}) {
  const baseConfig = { ...enhancedAdminConfig };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
  const mergedConfig = mergeDeep(baseConfig, overrides);
  
  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const validation = validateConfig(mergedConfig);
  
  if (!validation.valid) {
    console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:', validation.errors);
  }
  
  return {
    config: mergedConfig,
    validation,
    timestamp: new Date().toISOString()
  };
}

/**
 * [RU] –ì–ª—É–±–æ–∫–æ–µ —Å–ª–∏—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
 * [EN] Deep merge objects
 */
function mergeDeep(target, source) {
  const result = { ...target };
  
  for (const key in source) {
    if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {
      result[key] = mergeDeep(result[key] || {}, source[key]);
    } else {
      result[key] = source[key];
    }
  }
  
  return result;
}

/**
 * [RU] –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 * [EN] Gets development configuration
 */
function getDevelopmentConfig() {
  return getConfig({
    delays: {
      betweenMessages: 500,  // –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      betweenUsers: 50
    },
    batching: {
      maxUsersPerBatch: 3    // –ú–µ–Ω—å—à–∏–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    },
    logging: {
      enableDetailedLogs: true,
      logSequenceSteps: true,
      logUserEligibility: true
    },
    performance: {
      sequenceTimeoutMs: 30000  // –ö–æ—Ä–æ—á–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    }
  });
}

/**
 * [RU] –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 * [EN] Gets production configuration
 */
function getProductionConfig() {
  return getConfig({
    delays: {
      betweenMessages: 2000,
      betweenUsers: 150
    },
    batching: {
      maxUsersPerBatch: 25
    },
    logging: {
      enableDetailedLogs: false,
      logUserEligibility: false
    },
    performance: {
      sequenceTimeoutMs: 120000,
      enableMemoryOptimization: true
    }
  });
}

/**
 * [RU] –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —É–ª—É—á—à–µ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
 * [EN] Checks if enhanced broadcast is enabled
 */
function isEnhancedBroadcastEnabled(config = enhancedAdminConfig) {
  return config.enabled && validateConfig(config).valid;
}

/**
 * [RU] –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 * [EN] Prints current configuration
 */
function printConfig(config = enhancedAdminConfig) {
  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –∞–¥–º–∏–Ω—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:');
  console.log(`  üîß –í–∫–ª—é—á–µ–Ω–∞: ${config.enabled ? '‚úÖ' : '‚ùå'}`);
  console.log(`  ‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: ${config.delays.betweenMessages}ms`);
  console.log(`  üì¶ –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞: ${config.batching.maxUsersPerBatch} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
  console.log(`  üîÑ –ú–∞–∫—Å. –ø–æ–ø—ã—Ç–æ–∫: ${config.retry.maxAttempts}`);
  console.log(`  üìä –ú–∏–Ω. –ø–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: ${config.eligibility.minimumDataCompleteness}%`);
  console.log(`  ‚ö° –ú–∞–∫—Å. –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: ${config.performance.maxConcurrentSequences}`);
  
  const validation = validateConfig(config);
  if (!validation.valid) {
    console.log('  ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:');
    validation.errors.forEach(error => console.log(`    - ${error}`));
  }
}

module.exports = {
  enhancedAdminConfig,
  validateConfig,
  getConfig,
  getDevelopmentConfig,
  getProductionConfig,
  isEnhancedBroadcastEnabled,
  printConfig,
  mergeDeep
};