/**
 * [RU] –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 * [EN] Migration for adding enhanced message delivery logging
 */

const path = require('path');
const Database = require('better-sqlite3');

/**
 * [RU] –í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã enhanced_delivery_logs
 * [EN] Executes migration to create enhanced_delivery_logs table
 */
function runEnhancedDeliveryLogsMigration(databasePath) {
  let db;
  
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏—è enhanced_delivery_logs...');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = new Database(databasePath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–±–ª–∏—Ü–∞
    const tableExists = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='table' AND name='enhanced_delivery_logs'
    `).get();
    
    if (tableExists) {
      console.log('‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ enhanced_delivery_logs —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ');
      return { success: true, message: '–¢–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' };
    }
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const migration = db.transaction(() => {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É enhanced_delivery_logs
      db.exec(`
        CREATE TABLE enhanced_delivery_logs (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          user_id INTEGER NOT NULL,
          admin_message_id TEXT NOT NULL,
          sequence_step TEXT NOT NULL CHECK (sequence_step IN ('admin_message', 'useful_info', 'event_details', 'menu_trigger')),
          delivery_status TEXT NOT NULL CHECK (delivery_status IN ('delivered', 'failed', 'skipped')),
          delivery_timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
          error_message TEXT,
          sequence_id TEXT,
          completion_rate REAL DEFAULT 0.0,
          FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
        );
      `);
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      db.exec(`
        CREATE INDEX idx_enhanced_delivery_user_message 
        ON enhanced_delivery_logs(user_id, admin_message_id);
      `);
      
      db.exec(`
        CREATE INDEX idx_enhanced_delivery_timestamp 
        ON enhanced_delivery_logs(delivery_timestamp);
      `);
      
      db.exec(`
        CREATE INDEX idx_enhanced_delivery_status 
        ON enhanced_delivery_logs(delivery_status);
      `);
      
      db.exec(`
        CREATE INDEX idx_enhanced_delivery_sequence 
        ON enhanced_delivery_logs(sequence_id);
      `);
      
      db.exec(`
        CREATE INDEX idx_enhanced_delivery_step 
        ON enhanced_delivery_logs(sequence_step);
      `);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –∫ —Ç–∞–±–ª–∏—Ü–µ admin_messages
      try {
        db.exec(`
          ALTER TABLE admin_messages 
          ADD COLUMN enhanced_mode BOOLEAN DEFAULT FALSE;
        `);
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ enhanced_mode –∫ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      } catch (error) {
        if (!error.message.includes('duplicate column name')) {
          throw error;
        }
        console.log('‚ÑπÔ∏è –ü–æ–ª–µ enhanced_mode —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      }
      
      try {
        db.exec(`
          ALTER TABLE admin_messages 
          ADD COLUMN sequence_completion_rate REAL DEFAULT 0.0;
        `);
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ sequence_completion_rate –∫ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      } catch (error) {
        if (!error.message.includes('duplicate column name')) {
          throw error;
        }
        console.log('‚ÑπÔ∏è –ü–æ–ª–µ sequence_completion_rate —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      }
      
      try {
        db.exec(`
          ALTER TABLE admin_messages 
          ADD COLUMN eligible_users_count INTEGER DEFAULT 0;
        `);
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ eligible_users_count –∫ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      } catch (error) {
        if (!error.message.includes('duplicate column name')) {
          throw error;
        }
        console.log('‚ÑπÔ∏è –ü–æ–ª–µ eligible_users_count —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admin_messages');
      }
      
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ enhanced_delivery_logs —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      console.log('‚úÖ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    });
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    migration();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    const newTableInfo = db.prepare(`
      PRAGMA table_info(enhanced_delivery_logs)
    `).all();
    
    console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã enhanced_delivery_logs:');
    newTableInfo.forEach(column => {
      console.log(`  - ${column.name}: ${column.type} ${column.notnull ? 'NOT NULL' : ''}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    const indexes = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='index' AND tbl_name='enhanced_delivery_logs'
    `).all();
    
    console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã:');
    indexes.forEach(index => {
      console.log(`  - ${index.name}`);
    });
    
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è enhanced_delivery_logs –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    
    return { 
      success: true, 
      message: '–ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
      tableInfo: newTableInfo,
      indexes: indexes
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ enhanced_delivery_logs:', error.message);
    return { 
      success: false, 
      error: error.message,
      stack: error.stack
    };
  } finally {
    if (db) {
      try {
        db.close();
        console.log('üîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
      } catch (closeError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', closeError.message);
      }
    }
  }
}

/**
 * [RU] –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏
 * [EN] Checks migration status
 */
function checkMigrationStatus(databasePath) {
  let db;
  
  try {
    db = new Database(databasePath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    const tableExists = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='table' AND name='enhanced_delivery_logs'
    `).get();
    
    if (!tableExists) {
      return { migrated: false, reason: '–¢–∞–±–ª–∏—Ü–∞ enhanced_delivery_logs –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' };
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    const columns = db.prepare(`PRAGMA table_info(enhanced_delivery_logs)`).all();
    const expectedColumns = [
      'id', 'user_id', 'admin_message_id', 'sequence_step', 
      'delivery_status', 'delivery_timestamp', 'error_message', 
      'sequence_id', 'completion_rate'
    ];
    
    const actualColumns = columns.map(col => col.name);
    const missingColumns = expectedColumns.filter(col => !actualColumns.includes(col));
    
    if (missingColumns.length > 0) {
      return { 
        migrated: false, 
        reason: `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: ${missingColumns.join(', ')}` 
      };
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    const indexes = db.prepare(`
      SELECT name FROM sqlite_master 
      WHERE type='index' AND tbl_name='enhanced_delivery_logs'
    `).all();
    
    return { 
      migrated: true, 
      tableColumns: actualColumns.length,
      indexCount: indexes.length,
      details: {
        columns: actualColumns,
        indexes: indexes.map(idx => idx.name)
      }
    };
    
  } catch (error) {
    return { 
      migrated: false, 
      reason: `–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}` 
    };
  } finally {
    if (db) {
      db.close();
    }
  }
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –≤—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
if (require.main === module) {
  const databasePath = process.argv[2] || path.join(__dirname, '../tgbot.db');
  
  console.log(`üóÑÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${databasePath}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
  const status = checkMigrationStatus(databasePath);
  
  if (status.migrated) {
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    console.log(`üìä –°—Ç–æ–ª–±—Ü–æ–≤: ${status.tableColumns}, –∏–Ω–¥–µ–∫—Å–æ–≤: ${status.indexCount}`);
  } else {
    console.log(`‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–≥—Ä–∞—Ü–∏—è: ${status.reason}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    const result = runEnhancedDeliveryLogsMigration(databasePath);
    
    if (result.success) {
      console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } else {
      console.error('üí• –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', result.error);
      process.exit(1);
    }
  }
}

module.exports = {
  runEnhancedDeliveryLogsMigration,
  checkMigrationStatus
};